body {
    padding-top: 40px;
  }
 
.container{
  padding: 20px;
} 
  
.container_white{
  margin-top: 100px;
  padding-top: 20px;
  background-color: white;
  background-size: cover;
  margin: 0 auto;
  width: 500px;
}  

.container_user{
  padding-top: 20px;
  width: 100vw;
  height: 100vh;
  background-image: image-url("run.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}

.container_about{
  margin-top: 100px;
  padding-top: 20px;
  background-color: white;
  background-size: cover;
  margin: 0 auto;
  width: 1000px;
} 

.container-fluid{
 margin-top: 40px;
}

.fa-bolt{
  color: blue;
  font-size: 2em;
  vertical-align: middle;
}

.datetime-form {
  display: inline-block;
  width: auto;
}
.simple-calendar {
 .day {}
 .wday-0 {}
 .wday-1 {}
 .wday-2 {}
 .wday-3 {}
 .wday-4 {}
 .wday-5 {}
 .wday-6 {}
 .today {}
 .past {}
 .future {}
 .start-date {}
 .prev-month {}
 .next-month { }
 .current-month {}
 .has-events {
   background: #98fb98;
 }
}

.form-signin {
    width: 100%;
    max-width: 330px;
    padding: 15px;
    margin: auto;
}
// トップページのプロフィールで使用
.text-ornament {
    border-left: 8px solid #0062cc;
    padding-left: 15px;
}
.text-bold {
    font-weight: 600;
}

.text-large {
    font-size: 18px;
}

// 円グラフ
$borderWidth: 5px;
$animationTime: .5s;
$border-color-default: #efefef;
$border-color-fill: blue;
$size: 160px;
$howManySteps: 100; //this needs to be even. 

.progress {
  width: $size;
  height: $size;
  line-height: $size;
  background: none;
  margin: 0 auto;
  box-shadow: none;
  position: relative;
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $borderWidth solid $border-color-default;
    position: absolute;
    top: 0;
    left: 0;
  }
  > span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .progress-left {
    left: 0;
  }
  .progress-bar {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $borderWidth;
    border-style: solid;
    position: absolute;
    top: 0;
    border-color: $border-color-fill;
  }
  .progress-left .progress-bar {
    left: 100%;
    border-top-right-radius: ($size/2);;
    border-bottom-right-radius: ($size/2);;
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
    //animation: loading-2 1.5s linear forwards 1.8s;
  }
  .progress-right {
    right: 0;
    .progress-bar {
      left: -100%;
      border-top-left-radius: ($size/2);;
      border-bottom-left-radius: ($size/2);;
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
      //animation: loading-1 1.8s linear forwards;
    }
  }
  .progress-value {
    display: flex;
    border-radius: 50%;
    font-size: 1rem;
    text-align: center;
    line-height: 20px;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
    font-weight: 300;
    div {
      //margin-top: 10px;
    }
    span {
      font-size: 12px;
      text-transform: uppercase;
    }
  }
}

/* This for loop creates the necessary css animation names 
Due to the split circle of progress-left and progress right, we must use the animations on each side. 
*/
@for $i from 1 through $howManySteps {
	$stepName: ($i*(100 / $howManySteps));

	//animation only the left side if below 50%
	@if $i <= ($howManySteps/2) { 
		.progress[data-percentage="#{$stepName}"] {
			.progress-right .progress-bar {
				 animation: loading-#{$i} $animationTime linear forwards;
			}
			.progress-left .progress-bar {animation: 0;}
		}
	}
	//animation only the right side if above 50%
	@if $i > ($howManySteps/2)  {  
		.progress[data-percentage="#{$stepName}"] {
			.progress-right .progress-bar {
				animation: loading-#{($howManySteps/2)} $animationTime linear forwards; //set the animation to longest animation
			}
			.progress-left .progress-bar {
      animation: loading-#{$i - ($howManySteps/2)} $animationTime linear forwards $animationTime;
    }
		}
	}
}

//animation
@for $i from 1 through ($howManySteps/2) { 
	$degrees: (180/($howManySteps/2));
	$degrees: ($degrees*$i);
	@keyframes loading-#{$i}{
    0%{
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100%{
        -webkit-transform: rotate($degrees);
			transform: rotate(#{$degrees}deg);
    }
	}
}
// 円グラフ終わり
//フィードバック
.notice {
  margin-bottom: 0px;
  position: fixed;
  width: 100%;
  z-index: 10000;
  background-color: lightBlue;
  height:50px;
  text-align:center;
  font-size:30px;
  color:blue;
}

.alert {
  margin-bottom: 0px;
  position: fixed;
  width: 100%;
  z-index: 10000;
  background-color: #FFBEDA;
  height:50px;
  text-align:center;
  font-size:30px;
  color:red;
}

.tooltip-inner  {
  background-color: Blue;
  text-align:auto;
}

.bs-tooltip-bottom .arrow::before{
    border-bottom-color: Blue;
}